# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jjZJzcRGvUsndb6RXJj65rJzFcOlM9gl
"""

import streamlit as st
import pandas as pd
import pickle

userData=pd.DataFrame(columns = ['Graduation','Graduation_Stream','Percentage','Skills','Interests','Applicant_Id','text'])

st.title('Career recommendation system (this one actually works!)')
userData.at[0,'Graduation'] = st.text_input('Enter your graduation degree')
userData.at[0,'Graduation_Stream'] = st.text_input('Enter your graduation stream')
userData.at[0,'Percentage'] = st.text_input('Enter the graduation percentage')
userData.at[0,'Skills'] = st.text_input('What are your skills?')
userData.at[0,'Interests'] = st.text_input('What are your interest?')

userData.at[0, 'text']=userData.iloc[0]["Graduation"]+" "+ userData.iloc[0]["Graduation_Stream"] +" "+ userData.iloc[0]["Skills"]+" "+userData.iloc[0]["Interests"]

with open ('dataset.pickle', 'rb') as ptr:
  df_final = pickle.load(ptr)

with open ('recommendation.pickle', 'rb') as ptr1:
  tfidf_jobid = pickle.load(ptr1)

with open ('vector.pickle', 'rb') as ptr2:
  vector = pickle.load(ptr2)

def get_recommendation(userData, df_final):
  from sklearn.metrics.pairwise import cosine_similarity
  user_tfidf = vector.transform((userData['text']))
  cos_similarity_tfidf = map(lambda x: cosine_similarity(user_tfidf, x),tfidf_jobid)
  output2 = list(cos_similarity_tfidf)
  top = sorted(range(len(output2)), key=lambda i: output2[i], reverse=True)[:10]
  recommendation = pd.DataFrame(columns = ['Job_Type'])
  rowNum = 0
  for i in top:
      #recommendation.at[rowNum, 'Applicant_Id'] = u
      recommendation.at[rowNum, 'Job_Type'] = df_final['Job_Type'][i]
      rowNum += 1
  return recommendation


if st.button('Get career recommendation'):
  recommendations = get_recommendation(userData, df_final)
  st.dataframe(recommendations.style.hide_index())